
name: CI

on:
  push:
    branches: [ master ]
    tags:
      - '*'
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build_wheel:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.6, 3.7, 3.8]

    steps:
    - name: Checkout github repo
      uses: actions/checkout@v2
    - name: Checkout submodules
      run: git submodule update --init --recursive
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: 'x64'
    - name: Create Wheel Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
          if  [ ${{ matrix.python-version }} == "3.6" ]; then
            export PYTHONFOLDER="cp36-cp36m"
          elif [ ${{ matrix.python-version }} == "3.7" ]; then
            export PYTHONFOLDER="cp37-cp37m"
          elif [ ${{ matrix.python-version }} == "3.8" ]; then
            export PYTHONFOLDER="cp38-cp38"
          fi
          docker run --rm -e "PYTHONFOLDER=${PYTHONFOLDER}" -v $GITHUB_WORKSPACE:/home quay.io/pypa/manylinux2014_x86_64 /home/.github/workflows/actionsCreateWheelLinux.sh
          ls wheelhouse
          sudo rm -rf dist
          mv wheelhouse dist
    - name: Create Wheel Windows
      if: matrix.os == 'windows-latest'
      run: |
          pip install wheel delocate numpy==1.19.3
          rm -r -fo fht
          cmd /c mklink /d fht spyrit\fht\fht
          python setup.py sdist bdist_wheel
          mkdir wheelhouse
          copy dist\spyrit-* wheelhouse\
          ls wheelhouse
          rm -r -fo dist
          mv wheelhouse dist
    - name: Create Wheel Mac
      if: matrix.os == 'macos-latest'
      run: |     
          brew update
          brew install ccache \
                       libomp
          pip install wheel delocate numpy==1.19.3
          python setup.py sdist bdist_wheel
          delocate-wheel -w wheelhouse -v dist/*.whl
          ls wheelhouse
          delocate-listdeps --all wheelhouse/*.whl
          rm -rf dist
          mv wheelhouse dist
    - name: Upload wheels
      uses: actions/upload-artifact@v1
      with:
        name: dist
        path: dist/

  test_install:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.6, 3.7, 3.8]

    steps:
    - name: Checkout github repo
      uses: actions/checkout@v2
    - name: Checkout submodules
      run: git submodule update --init --recursive
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: 'x64'
    - name: Cache
      id: cache_data_example
      uses: actions/cache@v2
      with:
        path: data_example
        key: data_example3
        restore-keys: data_example3
    - name: Run the tests on Mac and Linux
      if: matrix.os != 'windows-latest'
      run: |
          mkdir -p data_example
          pip install -e .
          cd data_example
          if [ -f "data/stl10_binary.tar.gz" ]; then
              cd data
              tar xzvf stl10_binary.tar.gz
              cd ..
          fi
          python ../.github/workflows/example.py
          rm -rf data/stl10_binary
    - name: Run the tests on Windows
      if: matrix.os == 'windows-latest'
      run: |
          if(-not (Test-Path -path "data_example")) { mkdir data_example }
          rm -r -fo fht
          cmd /c mklink /d fht spyrit\fht\fht
          pip install torch torchvision -f https://download.pytorch.org/whl/torch_stable.html
          pip install -e .
          cd data_example
          if(Test-Path -path "data\stl10_binary.tar.gz") {
              cd data
              tar xzvf stl10_binary.tar.gz
              cd ..
          }
          python ..\.github\workflows\example.py
          rm -r -fo data/stl10_binary

  test_wheel:
    runs-on: ${{ matrix.os }}
    needs: [build_wheel]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.6, 3.7, 3.8]

    steps:
    - name: Checkout github repo
      uses: actions/checkout@v2
    - name: Checkout submodules
      run: git submodule update --init --recursive
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: 'x64'
    - name: Cache
      id: cache_data_example
      uses: actions/cache@v2
      with:
        path: data_example
        key: data_example3
        restore-keys: data_example3
    - uses: actions/download-artifact@v2
      with:
        name: dist
        path: dist/
    - name: Run the tests on Mac and Linux
      if: matrix.os != 'windows-latest'
      run: |
          mkdir -p data_example
          cd dist
          if  [ ${{ matrix.python-version }} == "3.6" ]; then
            export PYTHONFOLDER="cp36-cp36m"
          elif [ ${{ matrix.python-version }} == "3.7" ]; then
            export PYTHONFOLDER="cp37-cp37m"
          elif [ ${{ matrix.python-version }} == "3.8" ]; then
            export PYTHONFOLDER="cp38-cp38"
          fi
          if  [ ${{ matrix.os }} == "ubuntu-latest" ]; then
            export OS="manylinux"
          elif [ ${{ matrix.os }} == "macos-latest" ]; then
            export OS="macos"
          fi
          pip install spyrit-*${PYTHONFOLDER}-${OS}*.whl
          cd ../data_example
          if [ -f "data/stl10_binary.tar.gz" ]; then
              cd data
              tar xzvf stl10_binary.tar.gz
              cd ..
          fi
          python ../.github/workflows/example.py
          rm -rf data/stl10_binary
    - name: Run the tests on Windows
      if: matrix.os == 'windows-latest'
      run: |
          if(-not (Test-Path -path "data_example")) { mkdir data_example }
          cd dist
          pip install torch torchvision -f https://download.pytorch.org/whl/torch_stable.html
          pip install --find-links=. spyrit
          cd ..\data_example
          if(Test-Path -path "data\stl10_binary.tar.gz") {
              cd data
              tar xzvf stl10_binary.tar.gz
              cd ..
          }
          python ..\.github\workflows\example.py
          rm -r -fo data/stl10_binary
  
  publish_wheel:
    runs-on: ubuntu-latest
    needs: [build_wheel, test_wheel, test_install]
    steps:
    - name: Checkout github repo
      uses: actions/checkout@v2
    - name: Checkout submodules
      run: git submodule update --init --recursive
    - uses: actions/download-artifact@v1
      with:
        name: dist
        path: dist/
    - name: Publish to PyPI
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI }}
        skip_existing: true

